org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.service.TerminalBridge getBridgeAtPosition(int)
org.connectbot.transport.Local$AndroidKiller: void <init>(org.connectbot.transport.Local$1)-->org.connectbot.transport.Local$AndroidKiller: void <init>()
org.connectbot.util.HostDatabase: org.connectbot.bean.HostBean findHostById(long)-->org.connectbot.util.HostDatabase: org.connectbot.bean.HostBean getFirstHostBean(android.database.Cursor)
org.connectbot.AppCompatListActivity: void adjustViewVisibility()-->org.connectbot.HostListActivity$HostAdapter: int getItemCount()
org.connectbot.AppCompatListActivity: void adjustViewVisibility()-->org.connectbot.PortForwardListActivity$PortForwardAdapter: int getItemCount()
org.connectbot.AppCompatListActivity: void adjustViewVisibility()-->org.connectbot.PubkeyListActivity$PubkeyAdapter: int getItemCount()
org.connectbot.ConsoleActivity: void updateDefault()-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
org.connectbot.service.ConnectionNotifier: org.connectbot.service.ConnectionNotifier getInstance()-->org.connectbot.util.PreferenceConstants: void <clinit>()
org.connectbot.service.ConnectionNotifier: org.connectbot.service.ConnectionNotifier getInstance()-->org.connectbot.service.ConnectionNotifier$EclairAndBeyond$Holder: org.connectbot.service.ConnectionNotifier$EclairAndBeyond access$100()
org.connectbot.service.ConnectionNotifier: org.connectbot.service.ConnectionNotifier getInstance()-->org.connectbot.service.ConnectionNotifier$EclairAndBeyond$Holder: void <clinit>()
org.connectbot.service.ConnectionNotifier: org.connectbot.service.ConnectionNotifier getInstance()-->org.connectbot.service.ConnectionNotifier$PreEclair$Holder: void <clinit>()
org.connectbot.service.ConnectionNotifier: org.connectbot.service.ConnectionNotifier getInstance()-->org.connectbot.service.ConnectionNotifier$PreEclair$Holder: org.connectbot.service.ConnectionNotifier$PreEclair access$000()
org.connectbot.EditHostActivity$CharsetHolder: void access$200()-->org.connectbot.EditHostActivity$CharsetHolder: void initialize()
org.connectbot.EditHostActivity$CharsetHolder: void access$200()-->org.connectbot.EditHostActivity$CharsetHolder: void <clinit>()
org.connectbot.ConsoleActivity: void onSaveInstanceState(android.os.Bundle)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
org.connectbot.GeneratePubkeyActivity$4: void onClick(android.view.View)-->org.connectbot.GeneratePubkeyActivity: android.widget.Button access$600(org.connectbot.GeneratePubkeyActivity)
org.connectbot.GeneratePubkeyActivity$4: void onClick(android.view.View)-->org.connectbot.GeneratePubkeyActivity: void access$700(org.connectbot.GeneratePubkeyActivity)
org.connectbot.GeneratePubkeyActivity$4: void onClick(android.view.View)-->org.connectbot.GeneratePubkeyActivity: void <clinit>()
org.connectbot.EditHostActivity: void onBackPressed()-->org.connectbot.EditHostActivity: void attemptSaveAndExit()
org.connectbot.service.TerminalBridge: void <clinit>()-->org.connectbot.service.TerminalBridge: void <clinit>()
org.connectbot.service.ConnectivityReceiver: void setWantWifiLock(boolean)-->org.connectbot.service.ConnectivityReceiver: void acquireWifiLockIfNecessaryLocked()
org.connectbot.service.ConnectivityReceiver: void setWantWifiLock(boolean)-->org.connectbot.service.ConnectivityReceiver: void releaseWifiLockIfNecessaryLocked()
org.connectbot.service.TerminalManager: void onRebind(android.content.Intent)-->org.connectbot.service.TerminalManager: void keepServiceAlive()
org.connectbot.service.TerminalManager: void onRebind(android.content.Intent)-->org.connectbot.service.TerminalManager: void setResizeAllowed(boolean)
org.connectbot.util.Ed25519Provider: void insertIfNeeded()-->org.connectbot.util.Ed25519Provider: void <init>()
org.connectbot.util.Ed25519Provider: void insertIfNeeded()-->org.connectbot.util.Ed25519Provider: void <clinit>()
org.connectbot.GeneratePubkeyActivity: void access$300(org.connectbot.GeneratePubkeyActivity,int)-->org.connectbot.GeneratePubkeyActivity: void setBits(int)
org.connectbot.bean.PubkeyBean: void <init>()-->org.connectbot.bean.AbstractBean: void <init>()
org.connectbot.AppCompatPreferenceActivity: void onDestroy()-->org.connectbot.AppCompatPreferenceActivity: android.support.v7.app.AppCompatDelegate getDelegate()
org.connectbot.ConsoleActivity$8: void onClick(android.view.View)-->org.connectbot.ConsoleActivity: org.connectbot.service.PromptHelper getCurrentPromptHelper()
org.connectbot.ConsoleActivity$8: void onClick(android.view.View)-->org.connectbot.ConsoleActivity: void updatePromptVisible()
org.connectbot.GeneratePubkeyActivity: void startEntropyGather()-->org.connectbot.util.EntropyDialog: void <init>(android.content.Context,android.view.View)
org.connectbot.ConsoleActivity$9: void onClick(android.view.View)-->org.connectbot.ConsoleActivity: void access$900(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity$9: void onClick(android.view.View)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
org.connectbot.util.PubkeyUtils: java.security.KeyPair recoverKeyPair(byte[])-->org.connectbot.util.PubkeyUtils: void <clinit>()
org.connectbot.util.PubkeyUtils: java.security.KeyPair recoverKeyPair(byte[])-->org.connectbot.util.PubkeyUtils: java.lang.String getOidFromPkcs8Encoded(byte[])
org.connectbot.util.PubkeyUtils: java.security.KeyPair recoverKeyPair(byte[])-->org.connectbot.util.PubkeyUtils: java.security.PublicKey recoverPublicKey(java.security.KeyFactory,java.security.PrivateKey)
org.connectbot.util.PubkeyUtils: java.security.KeyPair recoverKeyPair(byte[])-->org.connectbot.util.PubkeyUtils: java.lang.String getAlgorithmForOid(java.lang.String)
org.connectbot.EditHostActivity: void onStart()-->org.connectbot.EditHostActivity$CharsetHolder: void <clinit>()
org.connectbot.EditHostActivity: void onStart()-->org.connectbot.EditHostActivity$2: void <init>(org.connectbot.EditHostActivity,org.connectbot.HostEditorFragment)
org.connectbot.EditHostActivity: void onStart()-->org.connectbot.EditHostActivity$CharsetHolder: boolean isInitialized()
org.connectbot.EditHostActivity: void onStart()-->org.connectbot.EditHostActivity$CharsetHolder: java.util.Map getCharsetData()
org.connectbot.EditHostActivity: void onStart()-->org.connectbot.EditHostActivity$2: java.lang.Object doInBackground(java.lang.Object[])
org.connectbot.PortForwardListActivity: void <init>()-->org.connectbot.PortForwardListActivity$Handler: void <init>(java.lang.ref.WeakReference)
org.connectbot.PortForwardListActivity: void <init>()-->org.connectbot.AppCompatListActivity: void <init>()
org.connectbot.EditHostActivity$CharsetHolder: boolean isInitialized()-->org.connectbot.EditHostActivity$CharsetHolder: void <clinit>()
org.connectbot.HelpActivity: void onCreate(android.os.Bundle)-->org.connectbot.HelpActivity$1: void <init>(org.connectbot.HelpActivity)
org.connectbot.HelpActivity: void onCreate(android.os.Bundle)-->org.connectbot.HelpActivity$2: void <init>(org.connectbot.HelpActivity)
org.connectbot.HelpActivity: void onCreate(android.os.Bundle)-->org.connectbot.HelpActivity$3: void <init>(org.connectbot.HelpActivity)
org.connectbot.ConsoleActivity$7: void onClick(android.view.View)-->org.connectbot.ConsoleActivity: org.connectbot.service.PromptHelper getCurrentPromptHelper()
org.connectbot.ConsoleActivity$7: void onClick(android.view.View)-->org.connectbot.ConsoleActivity: void updatePromptVisible()
org.connectbot.HostEditorActivity$CursorPreferenceHack: void <init>(org.connectbot.HostEditorActivity,java.lang.String,long)-->org.connectbot.HostEditorActivity$CursorPreferenceHack: void cacheValues()
org.connectbot.service.TerminalManager: void onDestroy()-->org.connectbot.service.ConnectivityReceiver: void cleanup()
org.connectbot.service.TerminalManager: void onDestroy()-->org.connectbot.service.TerminalManager: void disableMediaPlayer()
org.connectbot.service.TerminalManager: void onDestroy()-->org.connectbot.service.ConnectionNotifier: org.connectbot.service.ConnectionNotifier getInstance()
org.connectbot.service.TerminalManager: void onDestroy()-->org.connectbot.service.ConnectionNotifier$EclairAndBeyond: void hideRunningNotification(android.app.Service)
org.connectbot.service.TerminalManager: void onDestroy()-->org.connectbot.service.TerminalManager: void disconnectAll(boolean,boolean)
org.connectbot.service.TerminalManager: void onDestroy()-->org.connectbot.service.ConnectionNotifier$PreEclair: void hideRunningNotification(android.app.Service)
org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)-->org.connectbot.util.HostDatabase: void <init>(android.content.Context)
org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.EditHostActivity$CharsetHolder: void <clinit>()-->org.connectbot.EditHostActivity$CharsetHolder: void <clinit>()
org.connectbot.util.RobustSQLiteOpenHelper: void addIndexName(java.lang.String)-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.EditHostActivity$2: java.lang.Void doInBackground(java.lang.Void[])-->org.connectbot.EditHostActivity$CharsetHolder: void <clinit>()
org.connectbot.EditHostActivity$2: java.lang.Void doInBackground(java.lang.Void[])-->org.connectbot.EditHostActivity$CharsetHolder: void access$200()
org.connectbot.GeneratePubkeyActivity: void <init>()-->org.connectbot.GeneratePubkeyActivity$6: void <init>(org.connectbot.GeneratePubkeyActivity)
org.connectbot.GeneratePubkeyActivity: void setBits(int)-->org.connectbot.GeneratePubkeyActivity$KeyType: void <clinit>()
org.connectbot.GeneratePubkeyActivity: void setBits(int)-->org.connectbot.GeneratePubkeyActivity: int getClosestFieldSize(int)
org.connectbot.ColorsActivity$1: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.util.HostDatabase: void setDefaultColorsForScheme(int,int,int)
org.connectbot.ColorsActivity$1: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.ColorsActivity: org.connectbot.data.ColorStorage access$100(org.connectbot.ColorsActivity)
org.connectbot.ColorsActivity$1: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.util.Colors: void <clinit>()
org.connectbot.ColorsActivity$1: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.ColorsActivity: android.widget.Spinner access$300(org.connectbot.ColorsActivity)
org.connectbot.ColorsActivity$1: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.util.HostDatabase: void setGlobalColor(int,int)
org.connectbot.ColorsActivity$1: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.ColorsActivity: int[] access$000(org.connectbot.ColorsActivity)
org.connectbot.ColorsActivity$1: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.ColorsActivity: android.widget.Spinner access$400(org.connectbot.ColorsActivity)
org.connectbot.ColorsActivity$1: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.ColorsActivity: android.widget.GridView access$200(org.connectbot.ColorsActivity)
org.connectbot.EditHostActivity: boolean onOptionsItemSelected(android.view.MenuItem)-->org.connectbot.EditHostActivity: void attemptSaveAndExit()
org.connectbot.service.TerminalManager$2: void run()-->org.connectbot.service.TerminalManager: void disconnectAll(boolean,boolean)
org.connectbot.ConsoleActivity: void onResume()-->org.connectbot.ConsoleActivity: void configureOrientation()
org.connectbot.util.PubkeyDatabase: java.util.List allPubkeys()-->org.connectbot.util.PubkeyDatabase: java.util.List getPubkeys(java.lang.String,java.lang.String[])
org.connectbot.PortForwardListActivity: void onCreate(android.os.Bundle)-->org.connectbot.AppCompatListActivity$ListItemDecoration: void <init>(org.connectbot.AppCompatListActivity,android.content.Context)
org.connectbot.PortForwardListActivity: void onCreate(android.os.Bundle)-->org.connectbot.PortForwardListActivity$2: void <init>(org.connectbot.PortForwardListActivity)
org.connectbot.PortForwardListActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: org.connectbot.bean.HostBean findHostById(long)
org.connectbot.PortForwardListActivity: void onCreate(android.os.Bundle)-->org.connectbot.PortForwardListActivity$1: void <init>(org.connectbot.PortForwardListActivity)
org.connectbot.PortForwardListActivity: void onCreate(android.os.Bundle)-->org.connectbot.PortForwardListActivity: void updateList()
org.connectbot.PortForwardListActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.PortForwardListActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)
org.connectbot.PortForwardListActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.AppCompatPreferenceActivity: void onPostCreate(android.os.Bundle)-->org.connectbot.AppCompatPreferenceActivity: android.support.v7.app.AppCompatDelegate getDelegate()
org.connectbot.GeneratePubkeyActivity: void access$100(org.connectbot.GeneratePubkeyActivity,org.connectbot.GeneratePubkeyActivity$KeyType)-->org.connectbot.GeneratePubkeyActivity: void setKeyType(org.connectbot.GeneratePubkeyActivity$KeyType)
org.connectbot.service.TerminalManager: void addKey(org.connectbot.bean.PubkeyBean,java.security.KeyPair)-->org.connectbot.service.TerminalManager: void addKey(org.connectbot.bean.PubkeyBean,java.security.KeyPair,boolean)
org.connectbot.PubkeyListActivity: void access$100(org.connectbot.PubkeyListActivity,android.net.Uri)-->org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)
org.connectbot.transport.SSH: android.net.Uri getUri(java.lang.String)-->org.connectbot.transport.SSH: void <clinit>()
org.connectbot.service.ConnectionNotifier$EclairAndBeyond: void <init>(org.connectbot.service.ConnectionNotifier$1)-->org.connectbot.service.ConnectionNotifier$EclairAndBeyond: void <init>()
org.connectbot.ConsoleActivity$KeyRepeater: void run()-->org.connectbot.ConsoleActivity$KeyRepeater: void run()
org.connectbot.service.TerminalManager: void onConnectivityRestored()-->org.connectbot.service.TerminalManager$3: void <init>(org.connectbot.service.TerminalManager)
org.connectbot.service.TerminalManager: void onConnectivityRestored()-->org.connectbot.service.TerminalManager$3: void run()
org.connectbot.util.HostDatabase: org.connectbot.bean.HostBean getFirstHostBean(android.database.Cursor)-->org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)
org.connectbot.HostEditorActivity$CharsetHolder: java.lang.CharSequence[] getCharsetNames()-->org.connectbot.HostEditorActivity$CharsetHolder: void <clinit>()
org.connectbot.HostEditorActivity$CharsetHolder: java.lang.CharSequence[] getCharsetNames()-->org.connectbot.HostEditorActivity$CharsetHolder: void initialize()
org.connectbot.AppCompatPreferenceActivity: void onStop()-->org.connectbot.AppCompatPreferenceActivity: android.support.v7.app.AppCompatDelegate getDelegate()
org.connectbot.ConsoleActivity: android.view.View findCurrentView(int)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.service.TerminalBridge getBridgeAtPosition(int)
org.connectbot.service.TerminalManager: void access$100(org.connectbot.service.TerminalManager)-->org.connectbot.service.TerminalManager: void reconnectPending()
org.connectbot.GeneratePubkeyActivity$2: void onProgressChanged(android.widget.SeekBar,int,boolean)-->org.connectbot.GeneratePubkeyActivity: org.connectbot.GeneratePubkeyActivity$KeyType access$200(org.connectbot.GeneratePubkeyActivity)
org.connectbot.GeneratePubkeyActivity$2: void onProgressChanged(android.widget.SeekBar,int,boolean)-->org.connectbot.GeneratePubkeyActivity: void access$300(org.connectbot.GeneratePubkeyActivity,int)
org.connectbot.GeneratePubkeyActivity$2: void onProgressChanged(android.widget.SeekBar,int,boolean)-->org.connectbot.GeneratePubkeyActivity: void <clinit>()
org.connectbot.ConsoleActivity: void addKeyRepeater(android.view.View)-->org.connectbot.ConsoleActivity$KeyRepeater: void <init>(org.connectbot.ConsoleActivity,android.os.Handler,android.view.View)
org.connectbot.ConsoleActivity: void <init>()-->org.connectbot.ConsoleActivity$1: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: void <init>()-->org.connectbot.ConsoleActivity$3: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: void <init>()-->org.connectbot.ConsoleActivity$2: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.util.PubkeyDatabase: void <clinit>()
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.bean.PubkeyBean: void setPublicKey(byte[])
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.bean.PubkeyBean: void setNickname(java.lang.String)
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.bean.PubkeyBean: void setEncrypted(boolean)
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.PubkeyListActivity: java.security.KeyPair readPKCS8Key(byte[])
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.bean.PubkeyBean: void setPrivateKey(byte[])
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.util.PubkeyDatabase: org.connectbot.bean.PubkeyBean savePubkey(org.connectbot.bean.PubkeyBean)
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.PubkeyListActivity: java.lang.String convertAlgorithmName(java.lang.String)
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.PubkeyListActivity: void updateList()
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.bean.PubkeyBean: void setType(java.lang.String)
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.PubkeyListActivity: byte[] getBytesFromInputStream(java.io.InputStream,int)
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.bean.PubkeyBean: void <init>()
org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)-->org.connectbot.util.PubkeyDatabase: org.connectbot.util.PubkeyDatabase get(android.content.Context)
org.connectbot.HostEditorActivity: void onStop()-->org.connectbot.AppCompatPreferenceActivity: void onStop()
org.connectbot.HostListActivity$6: void onClick(android.content.DialogInterface,int)-->org.connectbot.HostListActivity: boolean access$002(org.connectbot.HostListActivity,boolean)
org.connectbot.ConsoleActivity: void access$1000(org.connectbot.ConsoleActivity)-->org.connectbot.ConsoleActivity: void autoHideEmulatedKeys()
org.connectbot.transport.TransportFactory: java.lang.String getFormatHint(java.lang.String,android.content.Context)-->org.connectbot.transport.SSH: java.lang.String getProtocolName()
org.connectbot.transport.TransportFactory: java.lang.String getFormatHint(java.lang.String,android.content.Context)-->org.connectbot.transport.Local: java.lang.String getFormatHint(android.content.Context)
org.connectbot.transport.TransportFactory: java.lang.String getFormatHint(java.lang.String,android.content.Context)-->org.connectbot.transport.AbsTransport: java.lang.String getFormatHint(android.content.Context)
org.connectbot.transport.TransportFactory: java.lang.String getFormatHint(java.lang.String,android.content.Context)-->org.connectbot.transport.Local: java.lang.String getProtocolName()
org.connectbot.transport.TransportFactory: java.lang.String getFormatHint(java.lang.String,android.content.Context)-->org.connectbot.transport.SSH: void <clinit>()
org.connectbot.transport.TransportFactory: java.lang.String getFormatHint(java.lang.String,android.content.Context)-->org.connectbot.transport.SSH: java.lang.String getFormatHint(android.content.Context)
org.connectbot.transport.TransportFactory: java.lang.String getFormatHint(java.lang.String,android.content.Context)-->org.connectbot.transport.Telnet: void <clinit>()
org.connectbot.transport.TransportFactory: java.lang.String getFormatHint(java.lang.String,android.content.Context)-->org.connectbot.transport.Telnet: java.lang.String getProtocolName()
org.connectbot.transport.TransportFactory: java.lang.String getFormatHint(java.lang.String,android.content.Context)-->org.connectbot.transport.Telnet: java.lang.String getFormatHint(android.content.Context)
org.connectbot.service.TerminalManager$1: void run()-->org.connectbot.service.TerminalManager: boolean removeKey(java.lang.String)
org.connectbot.util.HostDatabase: boolean savePortForward(org.connectbot.bean.PortForwardBean)-->org.connectbot.bean.PortForwardBean: android.content.ContentValues getValues()
org.connectbot.util.HostDatabase: boolean savePortForward(org.connectbot.bean.PortForwardBean)-->org.connectbot.bean.PortForwardBean: void setId(long)
org.connectbot.util.HostDatabase: boolean savePortForward(org.connectbot.bean.PortForwardBean)-->org.connectbot.bean.PortForwardBean: long getId()
org.connectbot.service.TerminalManager$3: void run()-->org.connectbot.service.TerminalManager: void access$100(org.connectbot.service.TerminalManager)
org.connectbot.util.PubkeyDatabase: org.connectbot.util.PubkeyDatabase get(android.content.Context)-->org.connectbot.util.PubkeyDatabase: void <init>(android.content.Context)
org.connectbot.util.PubkeyDatabase: org.connectbot.util.PubkeyDatabase get(android.content.Context)-->org.connectbot.util.PubkeyDatabase: void <clinit>()
org.connectbot.util.PubkeyDatabase: org.connectbot.util.PubkeyDatabase get(android.content.Context)-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity$11: void run()
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity: void requestActionBar()
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity$11: void <init>(org.connectbot.ConsoleActivity,android.widget.HorizontalScrollView)
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity: void showEmulatedKeys(boolean)
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity: void addKeyRepeater(android.view.View)
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity$7: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity$12: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity$8: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity: void setupTabLayoutWithViewPager()
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.StrictModeSetup: void run()
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity$9: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity$14: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity$13: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity$6: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity$10: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)-->org.connectbot.ConsoleActivity$5: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.HostEditorActivity: void access$100(org.connectbot.HostEditorActivity,android.preference.ListPreference)-->org.connectbot.HostEditorActivity: void initCharsetPref(android.preference.ListPreference)
org.connectbot.service.ConnectionNotifier$EclairAndBeyond: void <init>()-->org.connectbot.service.ConnectionNotifier: void <init>()
org.connectbot.service.TerminalManager: void onCreate()-->org.connectbot.util.PubkeyDatabase: void <clinit>()
org.connectbot.service.TerminalManager: void onCreate()-->org.connectbot.service.TerminalManager: void enableMediaPlayer()
org.connectbot.service.TerminalManager: void onCreate()-->org.connectbot.service.TerminalManager: void addKey(org.connectbot.bean.PubkeyBean,java.security.KeyPair)
org.connectbot.service.TerminalManager: void onCreate()-->org.connectbot.util.PubkeyDatabase: java.util.List getAllStartPubkeys()
org.connectbot.service.TerminalManager: void onCreate()-->org.connectbot.service.ConnectivityReceiver: void <init>(org.connectbot.service.TerminalManager,boolean)
org.connectbot.service.TerminalManager: void onCreate()-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.service.TerminalManager: void onCreate()-->org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)
org.connectbot.service.TerminalManager: void onCreate()-->org.connectbot.util.PubkeyUtils: void <clinit>()
org.connectbot.service.TerminalManager: void onCreate()-->org.connectbot.util.PubkeyUtils: java.security.PublicKey decodePublic(byte[],java.lang.String)
org.connectbot.service.TerminalManager: void onCreate()-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.service.TerminalManager: void onCreate()-->org.connectbot.service.TerminalManager: void updateSavingKeys()
org.connectbot.service.TerminalManager: void onCreate()-->org.connectbot.util.PubkeyDatabase: org.connectbot.util.PubkeyDatabase get(android.content.Context)
org.connectbot.service.TerminalManager: void onCreate()-->org.connectbot.util.PubkeyUtils: java.security.PrivateKey decodePrivate(byte[],java.lang.String)
org.connectbot.ConsoleActivity$12: boolean onTouch(android.view.View,android.view.MotionEvent)-->org.connectbot.ConsoleActivity: void access$1000(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: void access$100(org.connectbot.ConsoleActivity,android.view.View)-->org.connectbot.ConsoleActivity: void onEmulatedKeyClicked(android.view.View)
org.connectbot.bean.HostBean: java.lang.String toString()-->org.connectbot.transport.SSH: java.lang.String getProtocolName()
org.connectbot.bean.HostBean: java.lang.String toString()-->org.connectbot.transport.Local: java.lang.String getProtocolName()
org.connectbot.bean.HostBean: java.lang.String toString()-->org.connectbot.transport.Telnet: int getDefaultPort()
org.connectbot.bean.HostBean: java.lang.String toString()-->org.connectbot.transport.Telnet: void <clinit>()
org.connectbot.bean.HostBean: java.lang.String toString()-->org.connectbot.transport.SSH: void <clinit>()
org.connectbot.bean.HostBean: java.lang.String toString()-->org.connectbot.transport.TransportFactory: org.connectbot.transport.AbsTransport getTransport(java.lang.String)
org.connectbot.bean.HostBean: java.lang.String toString()-->org.connectbot.transport.SSH: int getDefaultPort()
org.connectbot.bean.HostBean: java.lang.String toString()-->org.connectbot.transport.TransportFactory: void <clinit>()
org.connectbot.bean.HostBean: java.lang.String toString()-->org.connectbot.transport.Telnet: java.lang.String getProtocolName()
org.connectbot.bean.HostBean: java.lang.String toString()-->org.connectbot.transport.Local: int getDefaultPort()
org.connectbot.PortForwardListActivity$2: void onClick(android.view.View)-->org.connectbot.PortForwardListActivity$2$1: void <init>(org.connectbot.PortForwardListActivity$2,android.widget.EditText)
org.connectbot.PortForwardListActivity$2: void onClick(android.view.View)-->org.connectbot.PortForwardListActivity$2$2: void <init>(org.connectbot.PortForwardListActivity$2,android.view.View,android.widget.Spinner,android.widget.EditText)
org.connectbot.util.HostDatabase: java.util.List getHosts(boolean)-->org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)
org.connectbot.GeneratePubkeyActivity: void onCreate(android.os.Bundle)-->org.connectbot.GeneratePubkeyActivity$3: void <init>(org.connectbot.GeneratePubkeyActivity)
org.connectbot.GeneratePubkeyActivity: void onCreate(android.os.Bundle)-->org.connectbot.GeneratePubkeyActivity$1: void <init>(org.connectbot.GeneratePubkeyActivity)
org.connectbot.GeneratePubkeyActivity: void onCreate(android.os.Bundle)-->org.connectbot.GeneratePubkeyActivity$4: void <init>(org.connectbot.GeneratePubkeyActivity)
org.connectbot.GeneratePubkeyActivity: void onCreate(android.os.Bundle)-->org.connectbot.GeneratePubkeyActivity: void setKeyType(org.connectbot.GeneratePubkeyActivity$KeyType)
org.connectbot.GeneratePubkeyActivity: void onCreate(android.os.Bundle)-->org.connectbot.GeneratePubkeyActivity$KeyType: void <clinit>()
org.connectbot.GeneratePubkeyActivity: void onCreate(android.os.Bundle)-->org.connectbot.GeneratePubkeyActivity$2: void <init>(org.connectbot.GeneratePubkeyActivity)
org.connectbot.HostEditorFragment: void processSshAuthChange()-->org.connectbot.bean.HostBean: void setUseAuthAgent(java.lang.String)
org.connectbot.HostEditorFragment: void processSshAuthChange()-->org.connectbot.HostEditorFragment: void handleHostChange()
org.connectbot.ConsoleActivity$14: void onGlobalLayout()-->org.connectbot.ConsoleActivity: android.widget.ImageView access$1300(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity$14: void onGlobalLayout()-->org.connectbot.ConsoleActivity: android.view.View access$1200(org.connectbot.ConsoleActivity)
org.connectbot.GeneratePubkeyActivity$1: void onCheckedChanged(android.widget.RadioGroup,int)-->org.connectbot.GeneratePubkeyActivity$KeyType: void <clinit>()
org.connectbot.GeneratePubkeyActivity$1: void onCheckedChanged(android.widget.RadioGroup,int)-->org.connectbot.GeneratePubkeyActivity: void access$100(org.connectbot.GeneratePubkeyActivity,org.connectbot.GeneratePubkeyActivity$KeyType)
org.connectbot.GeneratePubkeyActivity$1: void onCheckedChanged(android.widget.RadioGroup,int)-->org.connectbot.GeneratePubkeyActivity: void <clinit>()
org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.service.TerminalManager: void disconnectAll(boolean,boolean)-->org.connectbot.service.TerminalBridge: void <clinit>()
org.connectbot.HostEditorActivity: void updateSummaries()-->org.connectbot.HostEditorActivity$CursorPreferenceHack: java.lang.String getString(java.lang.String,java.lang.String)
org.connectbot.HostEditorActivity: void updateSummaries()-->org.connectbot.util.PubkeyDatabase: java.lang.String getNickname(long)
org.connectbot.PortForwardListActivity$PortForwardAdapter: void <init>(org.connectbot.PortForwardListActivity,android.content.Context,java.util.List)-->org.connectbot.AppCompatListActivity$ItemAdapter: void <init>(android.content.Context)
org.connectbot.ConsoleActivity: void setDisplayedTerminal(int)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: java.lang.CharSequence getPageTitle(int)
org.connectbot.ConsoleActivity: void setDisplayedTerminal(int)-->org.connectbot.ConsoleActivity: void onTerminalChanged()
org.connectbot.HostListActivity$2: void onClick(android.view.View)-->org.connectbot.EditHostActivity: android.content.Intent createIntentForNewHost(android.content.Context)
org.connectbot.GeneratePubkeyActivity: int getClosestFieldSize(int)-->org.connectbot.GeneratePubkeyActivity: void <clinit>()
org.connectbot.GeneratePubkeyActivity$2: void onStopTrackingTouch(android.widget.SeekBar)-->org.connectbot.GeneratePubkeyActivity: void access$300(org.connectbot.GeneratePubkeyActivity,int)
org.connectbot.GeneratePubkeyActivity$2: void onStopTrackingTouch(android.widget.SeekBar)-->org.connectbot.GeneratePubkeyActivity: int access$400(org.connectbot.GeneratePubkeyActivity)
org.connectbot.GeneratePubkeyActivity$2: void onStopTrackingTouch(android.widget.SeekBar)-->org.connectbot.GeneratePubkeyActivity: void <clinit>()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$10: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: long getPubkeyId()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$4: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$14: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment: void setUriPartsContainerExpanded(boolean)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$13: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment: void processSshAuthChange()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: int getPort()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: boolean getCompression()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: int getFontSize()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: java.lang.String getHostname()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: java.lang.String getUseAuthAgent()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: java.lang.String getColor()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: boolean getStayConnected()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$11: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$17: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$HostTextFieldWatcher: void <init>(org.connectbot.HostEditorFragment,java.lang.String)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$5: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$8: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: boolean getQuickDisconnect()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: java.lang.String getPostLogin()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$9: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$2: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: java.lang.String getUsername()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: boolean getWantSession()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$7: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: java.lang.String getNickname()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$12: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$3: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$16: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$6: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: java.lang.String toString()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$1: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.HostEditorFragment$15: void <init>(org.connectbot.HostEditorFragment)
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: java.lang.String getProtocol()
org.connectbot.HostEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)-->org.connectbot.bean.HostBean: java.lang.String getDelKey()
org.connectbot.service.TerminalManager: void addKey(org.connectbot.bean.PubkeyBean,java.security.KeyPair,boolean)-->org.connectbot.util.PubkeyUtils: void <clinit>()
org.connectbot.service.TerminalManager: void addKey(org.connectbot.bean.PubkeyBean,java.security.KeyPair,boolean)-->org.connectbot.service.TerminalManager$KeyHolder: void <init>()
org.connectbot.service.TerminalManager: void addKey(org.connectbot.bean.PubkeyBean,java.security.KeyPair,boolean)-->org.connectbot.service.TerminalManager: boolean removeKey(java.lang.String)
org.connectbot.service.TerminalManager: void addKey(org.connectbot.bean.PubkeyBean,java.security.KeyPair,boolean)-->org.connectbot.util.PubkeyUtils: byte[] extractOpenSSHPublic(java.security.KeyPair)
org.connectbot.service.TerminalManager: void addKey(org.connectbot.bean.PubkeyBean,java.security.KeyPair,boolean)-->org.connectbot.service.TerminalManager$1: void <init>(org.connectbot.service.TerminalManager,java.lang.String)
org.connectbot.HostEditorFragment: org.connectbot.HostEditorFragment newInstance(org.connectbot.bean.HostBean,java.util.ArrayList,java.util.ArrayList)-->org.connectbot.HostEditorFragment: void <init>()
org.connectbot.HostEditorActivity$CharsetHolder: boolean isInitialized()-->org.connectbot.HostEditorActivity$CharsetHolder: void <clinit>()
org.connectbot.transport.SSH: void <clinit>()-->org.connectbot.util.Ed25519Provider: void insertIfNeeded()
org.connectbot.transport.SSH: void <clinit>()-->org.connectbot.transport.SSH: void <clinit>()
org.connectbot.transport.SSH: void <clinit>()-->org.connectbot.util.Ed25519Provider: void <clinit>()
org.connectbot.util.HostDatabase: void setGlobalColor(int,int)-->org.connectbot.util.HostDatabase: void setColorForScheme(int,int,int)
org.connectbot.HostListActivity$3: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.HostListActivity: void updateList()
org.connectbot.ConsoleActivity: void onTerminalChanged()-->org.connectbot.ConsoleActivity: void updateDefault()
org.connectbot.ConsoleActivity: void onTerminalChanged()-->org.connectbot.ConsoleActivity: void updatePromptVisible()
org.connectbot.ConsoleActivity: void onTerminalChanged()-->org.connectbot.ConsoleActivity: android.view.View findCurrentView(int)
org.connectbot.ColorsActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: int[] getColorsForScheme(int)
org.connectbot.ColorsActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: int[] getDefaultColorsForScheme(int)
org.connectbot.ColorsActivity: void onCreate(android.os.Bundle)-->org.connectbot.ColorsActivity$ColorsAdapter: void <init>(org.connectbot.ColorsActivity,boolean,int)
org.connectbot.ColorsActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.ColorsActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)
org.connectbot.ColorsActivity: void onCreate(android.os.Bundle)-->org.connectbot.ColorsActivity$ColorsAdapter: void <init>(org.connectbot.ColorsActivity,boolean)
org.connectbot.ColorsActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.PubkeyListActivity$2: void onClick(android.content.DialogInterface,int)-->org.connectbot.PubkeyListActivity: void access$100(org.connectbot.PubkeyListActivity,android.net.Uri)
org.connectbot.ConsoleActivity: void autoHideEmulatedKeys()-->org.connectbot.ConsoleActivity$4: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: void autoHideEmulatedKeys()-->org.connectbot.ConsoleActivity$4: void run()
org.connectbot.ConsoleActivity: void access$600(org.connectbot.ConsoleActivity)-->org.connectbot.ConsoleActivity: void hideActionBarIfRequested()
org.connectbot.util.HostDatabase: java.util.List getPortForwardsForHost(org.connectbot.bean.HostBean)-->org.connectbot.bean.PortForwardBean: void <init>(long,long,java.lang.String,java.lang.String,int,java.lang.String,int)
org.connectbot.service.ConnectionNotifier$PreEclair: void <init>()-->org.connectbot.service.ConnectionNotifier: void <init>()
org.connectbot.service.ConnectionNotifier$PreEclair: void <init>()-->org.connectbot.service.ConnectionNotifier$PreEclair: void <clinit>()
org.connectbot.HostEditorActivity$CharsetHolder: void <clinit>()-->org.connectbot.HostEditorActivity$CharsetHolder: void <clinit>()
org.connectbot.HostListActivity: void access$100(org.connectbot.HostListActivity)-->org.connectbot.HostListActivity: void disconnectAll()
org.connectbot.util.PubkeyDatabase: java.util.List getPubkeys(java.lang.String,java.lang.String[])-->org.connectbot.bean.PubkeyBean: void setNickname(java.lang.String)
org.connectbot.util.PubkeyDatabase: java.util.List getPubkeys(java.lang.String,java.lang.String[])-->org.connectbot.bean.PubkeyBean: void setPublicKey(byte[])
org.connectbot.util.PubkeyDatabase: java.util.List getPubkeys(java.lang.String,java.lang.String[])-->org.connectbot.bean.PubkeyBean: void setLifetime(int)
org.connectbot.util.PubkeyDatabase: java.util.List getPubkeys(java.lang.String,java.lang.String[])-->org.connectbot.bean.PubkeyBean: void setEncrypted(boolean)
org.connectbot.util.PubkeyDatabase: java.util.List getPubkeys(java.lang.String,java.lang.String[])-->org.connectbot.bean.PubkeyBean: void setPrivateKey(byte[])
org.connectbot.util.PubkeyDatabase: java.util.List getPubkeys(java.lang.String,java.lang.String[])-->org.connectbot.bean.PubkeyBean: void <init>()
org.connectbot.util.PubkeyDatabase: java.util.List getPubkeys(java.lang.String,java.lang.String[])-->org.connectbot.bean.PubkeyBean: void setConfirmUse(boolean)
org.connectbot.util.PubkeyDatabase: java.util.List getPubkeys(java.lang.String,java.lang.String[])-->org.connectbot.bean.PubkeyBean: void setStartup(boolean)
org.connectbot.util.PubkeyDatabase: java.util.List getPubkeys(java.lang.String,java.lang.String[])-->org.connectbot.bean.PubkeyBean: void setType(java.lang.String)
org.connectbot.util.PubkeyDatabase: java.util.List getPubkeys(java.lang.String,java.lang.String[])-->org.connectbot.bean.PubkeyBean: void setId(long)
org.connectbot.ConsoleActivity: void access$1400(org.connectbot.ConsoleActivity)-->org.connectbot.ConsoleActivity: void pasteIntoTerminal()
org.connectbot.util.HostDatabase: void <clinit>()-->org.connectbot.util.RobustSQLiteOpenHelper: void addIndexName(java.lang.String)
org.connectbot.util.HostDatabase: void <clinit>()-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.util.HostDatabase: void <clinit>()-->org.connectbot.util.RobustSQLiteOpenHelper: void addTableName(java.lang.String)
org.connectbot.util.HostDatabase: void <clinit>()-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.service.TerminalManager: void stopWithDelay()-->org.connectbot.service.TerminalManager$IdleTask: void <init>(org.connectbot.service.TerminalManager,org.connectbot.service.TerminalManager$1)
org.connectbot.ConsoleActivity: void setupTabLayoutWithViewPager()-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: int getCount()
org.connectbot.ColorsActivity: void onResume()-->org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)
org.connectbot.ColorsActivity: void onResume()-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.ColorsActivity: void onResume()-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.HostListActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)
org.connectbot.HostListActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.HostListActivity: void onCreate(android.os.Bundle)-->org.connectbot.HostListActivity$2: void <init>(org.connectbot.HostListActivity)
org.connectbot.HostListActivity: void onCreate(android.os.Bundle)-->org.connectbot.AppCompatListActivity$ListItemDecoration: void <init>(org.connectbot.AppCompatListActivity,android.content.Context)
org.connectbot.HostListActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.util.RobustSQLiteOpenHelper: void addTableName(java.lang.String)-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.PubkeyListActivity: void <init>()-->org.connectbot.AppCompatListActivity: void <init>()
org.connectbot.PubkeyListActivity: void <init>()-->org.connectbot.PubkeyListActivity$1: void <init>(org.connectbot.PubkeyListActivity)
org.connectbot.ColorsActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)-->org.connectbot.ColorsActivity: void editColor(int)
org.connectbot.PortForwardListActivity: void onStart()-->org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)
org.connectbot.PortForwardListActivity: void onStart()-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.PortForwardListActivity: void onStart()-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.util.HostDatabase: void <init>(android.content.Context,java.lang.String)-->org.connectbot.util.RobustSQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)
org.connectbot.HostListActivity$7: void onClick(android.content.DialogInterface,int)-->org.connectbot.HostListActivity: boolean access$200(org.connectbot.HostListActivity)
org.connectbot.HostListActivity$7: void onClick(android.content.DialogInterface,int)-->org.connectbot.HostListActivity: boolean access$002(org.connectbot.HostListActivity,boolean)
org.connectbot.PortForwardListActivity: void updateList()-->org.connectbot.util.HostDatabase: java.util.List getPortForwardsForHost(org.connectbot.bean.HostBean)
org.connectbot.PortForwardListActivity: void updateList()-->org.connectbot.PortForwardListActivity$PortForwardAdapter: void <init>(org.connectbot.PortForwardListActivity,android.content.Context,java.util.List)
org.connectbot.PortForwardListActivity: void updateList()-->org.connectbot.AppCompatListActivity: void adjustViewVisibility()
org.connectbot.HostEditorActivity$2: void run()-->org.connectbot.HostEditorActivity: void access$100(org.connectbot.HostEditorActivity,android.preference.ListPreference)
org.connectbot.HostEditorActivity$CharsetHolder: java.lang.CharSequence[] getCharsetIds()-->org.connectbot.HostEditorActivity$CharsetHolder: void <clinit>()
org.connectbot.HostEditorActivity$CharsetHolder: java.lang.CharSequence[] getCharsetIds()-->org.connectbot.HostEditorActivity$CharsetHolder: void initialize()
org.connectbot.ConsoleActivity: void updatePromptVisible()-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
org.connectbot.ConsoleActivity: void updatePromptVisible()-->org.connectbot.ConsoleActivity: void hideAllPrompts()
org.connectbot.HostEditorActivity: void onStart()-->org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)
org.connectbot.HostEditorActivity: void onStart()-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.HostEditorActivity: void onStart()-->org.connectbot.util.PubkeyDatabase: void <clinit>()
org.connectbot.HostEditorActivity: void onStart()-->org.connectbot.util.PubkeyDatabase: org.connectbot.util.PubkeyDatabase get(android.content.Context)
org.connectbot.HostEditorActivity: void onStart()-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.ConsoleActivity: void onNewIntent(android.content.Intent)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: void notifyDataSetChanged()
org.connectbot.ConsoleActivity: void onNewIntent(android.content.Intent)-->org.connectbot.ConsoleActivity: void setDisplayedTerminal(int)
org.connectbot.ConsoleActivity: void onNewIntent(android.content.Intent)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: int getCount()
org.connectbot.HostEditorActivity: void <init>()-->org.connectbot.AppCompatPreferenceActivity: void <init>()
org.connectbot.ConsoleActivity: void access$1100(org.connectbot.ConsoleActivity,boolean)-->org.connectbot.ConsoleActivity: void showEmulatedKeys(boolean)
org.connectbot.util.PubkeyUtils: java.security.PublicKey recoverPublicKey(java.security.KeyFactory,java.security.PrivateKey)-->org.connectbot.util.PubkeyUtils: void <clinit>()
org.connectbot.util.PubkeyUtils: java.security.PublicKey recoverPublicKey(java.security.KeyFactory,java.security.PrivateKey)-->org.connectbot.util.PubkeyUtils: java.math.BigInteger getRSAPublicExponentFromPkcs8Encoded(byte[])
org.connectbot.EditHostActivity: boolean onCreateOptionsMenu(android.view.Menu)-->org.connectbot.EditHostActivity: void setAddSaveButtonEnabled(boolean)
org.connectbot.HostEditorFragment: void onCreate(android.os.Bundle)-->org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)
org.connectbot.HostEditorFragment: void onCreate(android.os.Bundle)-->org.connectbot.bean.HostBean: void setId(long)
org.connectbot.HostEditorFragment: void onCreate(android.os.Bundle)-->org.connectbot.bean.HostBean: void <init>()
org.connectbot.ConsoleActivity$4: void run()-->org.connectbot.ConsoleActivity: java.lang.Runnable access$702(org.connectbot.ConsoleActivity,java.lang.Runnable)
org.connectbot.ConsoleActivity$4: void run()-->org.connectbot.ConsoleActivity: boolean access$400(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity$4: void run()-->org.connectbot.ConsoleActivity: android.view.animation.Animation access$500(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity$4: void run()-->org.connectbot.ConsoleActivity: void access$600(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity$4: void run()-->org.connectbot.ConsoleActivity: boolean access$300(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity$4: void run()-->org.connectbot.ConsoleActivity: android.widget.LinearLayout access$200(org.connectbot.ConsoleActivity)
org.connectbot.HostListActivity: void <init>()-->org.connectbot.HostListActivity$1: void <init>(org.connectbot.HostListActivity)
org.connectbot.HostListActivity: void <init>()-->org.connectbot.AppCompatListActivity: void <init>()
org.connectbot.service.ConnectionNotifier$EclairAndBeyond$Holder: void <clinit>()-->org.connectbot.service.ConnectionNotifier$EclairAndBeyond: void <init>(org.connectbot.service.ConnectionNotifier$1)
org.connectbot.service.ConnectionNotifier$EclairAndBeyond$Holder: void <clinit>()-->org.connectbot.service.ConnectionNotifier$EclairAndBeyond$Holder: void <clinit>()
org.connectbot.GeneratePubkeyActivity: void <clinit>()-->org.connectbot.GeneratePubkeyActivity: void <clinit>()
org.connectbot.GeneratePubkeyActivity: void <clinit>()-->org.connectbot.util.Ed25519Provider: void insertIfNeeded()
org.connectbot.GeneratePubkeyActivity: void <clinit>()-->org.connectbot.util.Ed25519Provider: void <clinit>()
org.connectbot.EditHostActivity: void attemptSaveAndExit()-->org.connectbot.util.HostDatabase: org.connectbot.bean.HostBean saveHost(org.connectbot.bean.HostBean)
org.connectbot.EditHostActivity: void attemptSaveAndExit()-->org.connectbot.EditHostActivity: void showDiscardDialog()
org.connectbot.util.HostDatabase: void <init>(android.content.Context)-->org.connectbot.util.HostDatabase: void <init>(android.content.Context,java.lang.String)
org.connectbot.ColorsActivity: void editColor(int)-->org.connectbot.util.UberColorPickerDialog: void <init>(android.content.Context,org.connectbot.util.UberColorPickerDialog$OnColorChangedListener,int)
org.connectbot.GeneratePubkeyActivity$KeyType: org.connectbot.GeneratePubkeyActivity$KeyType[] values()-->org.connectbot.GeneratePubkeyActivity$KeyType: void <clinit>()
org.connectbot.bean.HostBean: void <init>()-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.bean.HostBean: void <init>()-->org.connectbot.bean.AbstractBean: void <init>()
org.connectbot.bean.HostBean: void <init>()-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.EditHostActivity$CharsetHolder: void initialize()-->org.connectbot.EditHostActivity$CharsetHolder: void <clinit>()
org.connectbot.GeneratePubkeyActivity: void setKeyType(org.connectbot.GeneratePubkeyActivity$KeyType)-->org.connectbot.GeneratePubkeyActivity$7: void <clinit>()
org.connectbot.GeneratePubkeyActivity: void setKeyType(org.connectbot.GeneratePubkeyActivity$KeyType)-->org.connectbot.GeneratePubkeyActivity: void resetBitDefaults()
org.connectbot.GeneratePubkeyActivity: void setKeyType(org.connectbot.GeneratePubkeyActivity$KeyType)-->org.connectbot.GeneratePubkeyActivity: void setAllowBitStrengthChange(boolean)
org.connectbot.EditHostActivity: void showDiscardDialog()-->org.connectbot.EditHostActivity$3: void <init>(org.connectbot.EditHostActivity)
org.connectbot.EditHostActivity: void showDiscardDialog()-->org.connectbot.EditHostActivity$4: void <init>(org.connectbot.EditHostActivity)
org.connectbot.ConsoleActivity: boolean onCreateOptionsMenu(android.view.Menu)-->org.connectbot.ConsoleActivity$19: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: boolean onCreateOptionsMenu(android.view.Menu)-->org.connectbot.ConsoleActivity$20: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: boolean onCreateOptionsMenu(android.view.Menu)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
org.connectbot.ConsoleActivity: boolean onCreateOptionsMenu(android.view.Menu)-->org.connectbot.ConsoleActivity$18: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: boolean onCreateOptionsMenu(android.view.Menu)-->org.connectbot.ConsoleActivity$17: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: boolean onCreateOptionsMenu(android.view.Menu)-->org.connectbot.ConsoleActivity$16: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.ConsoleActivity: boolean onCreateOptionsMenu(android.view.Menu)-->org.connectbot.ConsoleActivity$15: void <init>(org.connectbot.ConsoleActivity)
org.connectbot.HostListActivity: boolean onCreateOptionsMenu(android.view.Menu)-->org.connectbot.HostListActivity$3: void <init>(org.connectbot.HostListActivity)
org.connectbot.HostListActivity: boolean onCreateOptionsMenu(android.view.Menu)-->org.connectbot.HostListActivity$4: void <init>(org.connectbot.HostListActivity)
org.connectbot.HostListActivity: boolean onCreateOptionsMenu(android.view.Menu)-->org.connectbot.HostListActivity$5: void <init>(org.connectbot.HostListActivity)
org.connectbot.AppCompatPreferenceActivity: void onPostResume()-->org.connectbot.AppCompatPreferenceActivity: android.support.v7.app.AppCompatDelegate getDelegate()
org.connectbot.ConsoleActivity$11: void run()-->org.connectbot.ConsoleActivity$11$1: void <init>(org.connectbot.ConsoleActivity$11,int)
org.connectbot.ConsoleActivity$11: void run()-->org.connectbot.ConsoleActivity$11$1: void run()
org.connectbot.PubkeyListActivity: void onCreate(android.os.Bundle)-->org.connectbot.AppCompatListActivity$ListItemDecoration: void <init>(org.connectbot.AppCompatListActivity,android.content.Context)
org.connectbot.ColorsActivity: boolean onCreateOptionsMenu(android.view.Menu)-->org.connectbot.ColorsActivity$1: void <init>(org.connectbot.ColorsActivity)
org.connectbot.util.PreferenceConstants: void <clinit>()-->org.connectbot.util.PreferenceConstants: void <clinit>()
org.connectbot.SettingsActivity: void onCreate(android.os.Bundle)-->org.connectbot.AppCompatPreferenceActivity: void onCreate(android.os.Bundle)
org.connectbot.PubkeyListActivity: void updateList()-->org.connectbot.util.PubkeyDatabase: void <clinit>()
org.connectbot.PubkeyListActivity: void updateList()-->org.connectbot.util.PubkeyDatabase: java.util.List allPubkeys()
org.connectbot.PubkeyListActivity: void updateList()-->org.connectbot.AppCompatListActivity: void adjustViewVisibility()
org.connectbot.PubkeyListActivity: void updateList()-->org.connectbot.PubkeyListActivity$PubkeyAdapter: void <init>(org.connectbot.PubkeyListActivity,android.content.Context,java.util.List)
org.connectbot.PubkeyListActivity: void updateList()-->org.connectbot.util.PubkeyDatabase: org.connectbot.util.PubkeyDatabase get(android.content.Context)
org.connectbot.PubkeyListActivity: void updateList()-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.GeneratePubkeyActivity$KeyType: void <clinit>()-->org.connectbot.GeneratePubkeyActivity$KeyType: void <clinit>()
org.connectbot.GeneratePubkeyActivity$KeyType: void <clinit>()-->org.connectbot.GeneratePubkeyActivity: int[] access$000()
org.connectbot.GeneratePubkeyActivity$KeyType: void <clinit>()-->org.connectbot.GeneratePubkeyActivity$KeyType: void <init>(java.lang.String,int,java.lang.String,int,int,int)
org.connectbot.GeneratePubkeyActivity$KeyType: void <clinit>()-->org.connectbot.GeneratePubkeyActivity: void <clinit>()
org.connectbot.ConsoleActivity: void pasteIntoTerminal()-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
org.connectbot.EditHostActivity: android.content.Intent createIntentForNewHost(android.content.Context)-->org.connectbot.EditHostActivity: android.content.Intent createIntentForExistingHost(android.content.Context,long)
org.connectbot.EditHostActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.PubkeyDatabase: void <clinit>()
org.connectbot.EditHostActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.PubkeyDatabase: java.util.List allValues(java.lang.String)
org.connectbot.EditHostActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: org.connectbot.bean.HostBean findHostById(long)
org.connectbot.EditHostActivity: void onCreate(android.os.Bundle)-->org.connectbot.HostEditorFragment: org.connectbot.HostEditorFragment newInstance(org.connectbot.bean.HostBean,java.util.ArrayList,java.util.ArrayList)
org.connectbot.EditHostActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)
org.connectbot.EditHostActivity: void onCreate(android.os.Bundle)-->org.connectbot.EditHostActivity$1: void <init>(org.connectbot.EditHostActivity)
org.connectbot.EditHostActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.EditHostActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.PubkeyDatabase: org.connectbot.util.PubkeyDatabase get(android.content.Context)
org.connectbot.EditHostActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.PubkeyDatabase: void <clinit>()
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.HostEditorActivity: void updateSummaries()
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.PubkeyDatabase: java.util.List allValues(java.lang.String)
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.HostEditorActivity$CharsetHolder: void <clinit>()
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: org.connectbot.bean.HostBean findHostById(long)
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.HostEditorActivity$2: void <init>(org.connectbot.HostEditorActivity,android.preference.ListPreference)
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.HostEditorActivity: void initCharsetPref(android.preference.ListPreference)
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.HostEditorActivity$1: void <init>(org.connectbot.HostEditorActivity)
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.HostEditorActivity$CursorPreferenceHack: void <init>(org.connectbot.HostEditorActivity,java.lang.String,long)
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.HostEditorActivity$CharsetHolder: boolean isInitialized()
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.AppCompatPreferenceActivity: void onCreate(android.os.Bundle)
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.HostEditorActivity$CursorPreferenceHack: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.PubkeyDatabase: org.connectbot.util.PubkeyDatabase get(android.content.Context)
org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.service.ConnectionNotifier$PreEclair$Holder: void <clinit>()-->org.connectbot.service.ConnectionNotifier$PreEclair: void <init>()
org.connectbot.service.ConnectionNotifier$PreEclair$Holder: void <clinit>()-->org.connectbot.service.ConnectionNotifier$PreEclair: void <clinit>()
org.connectbot.service.ConnectionNotifier$PreEclair$Holder: void <clinit>()-->org.connectbot.service.ConnectionNotifier$PreEclair$Holder: void <clinit>()
org.connectbot.HostListActivity$HostAdapter: void <init>(org.connectbot.HostListActivity,android.content.Context,java.util.List,org.connectbot.service.TerminalManager)-->org.connectbot.AppCompatListActivity$ItemAdapter: void <init>(android.content.Context)
org.connectbot.ConsoleActivity$15: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
org.connectbot.HostListActivity: void disconnectAll()-->org.connectbot.HostListActivity$6: void <init>(org.connectbot.HostListActivity)
org.connectbot.HostListActivity: void disconnectAll()-->org.connectbot.HostListActivity$7: void <init>(org.connectbot.HostListActivity)
org.connectbot.PubkeyListActivity: java.security.KeyPair readPKCS8Key(byte[])-->org.connectbot.util.PubkeyUtils: void <clinit>()
org.connectbot.PubkeyListActivity: java.security.KeyPair readPKCS8Key(byte[])-->org.connectbot.util.PubkeyUtils: java.security.KeyPair recoverKeyPair(byte[])
org.connectbot.service.TerminalManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)-->org.connectbot.service.TerminalManager: void disableMediaPlayer()
org.connectbot.service.TerminalManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)-->org.connectbot.service.TerminalManager: void updateSavingKeys()
org.connectbot.service.TerminalManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)-->org.connectbot.service.TerminalManager: void enableMediaPlayer()
org.connectbot.service.TerminalManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)-->org.connectbot.service.ConnectivityReceiver: void setWantWifiLock(boolean)
org.connectbot.util.PubkeyDatabase: void <init>(android.content.Context)-->org.connectbot.util.RobustSQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)
org.connectbot.util.HostDatabase: int[] getColorsForScheme(int)-->org.connectbot.util.Colors: void <clinit>()
org.connectbot.HostListActivity: void onStart()-->org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)
org.connectbot.HostListActivity: void onStart()-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.HostListActivity: void onStart()-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.EditHostActivity$2: java.lang.Object doInBackground(java.lang.Object[])-->org.connectbot.EditHostActivity$2: java.lang.Void doInBackground(java.lang.Void[])
org.connectbot.transport.SSH: void <init>()-->org.connectbot.transport.AbsTransport: void <init>()
org.connectbot.service.ConnectionNotifier$EclairAndBeyond$Holder: org.connectbot.service.ConnectionNotifier$EclairAndBeyond access$100()-->org.connectbot.service.ConnectionNotifier$EclairAndBeyond$Holder: void <clinit>()
org.connectbot.ConsoleActivity$6: boolean onKey(android.view.View,int,android.view.KeyEvent)-->org.connectbot.ConsoleActivity: org.connectbot.service.PromptHelper getCurrentPromptHelper()
org.connectbot.ConsoleActivity$6: boolean onKey(android.view.View,int,android.view.KeyEvent)-->org.connectbot.ConsoleActivity: void updatePromptVisible()
org.connectbot.util.PubkeyDatabase: java.util.List getAllStartPubkeys()-->org.connectbot.util.PubkeyDatabase: java.util.List getPubkeys(java.lang.String,java.lang.String[])
org.connectbot.ConsoleActivity$16: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
org.connectbot.ConsoleActivity$KeyRepeater: boolean onTouch(android.view.View,android.view.MotionEvent)-->org.connectbot.ConsoleActivity$KeyRepeater: void run()
org.connectbot.util.PubkeyDatabase: org.connectbot.bean.PubkeyBean savePubkey(org.connectbot.bean.PubkeyBean)-->org.connectbot.bean.PubkeyBean: long getId()
org.connectbot.util.PubkeyDatabase: org.connectbot.bean.PubkeyBean savePubkey(org.connectbot.bean.PubkeyBean)-->org.connectbot.bean.PubkeyBean: android.content.ContentValues getValues()
org.connectbot.util.PubkeyDatabase: org.connectbot.bean.PubkeyBean savePubkey(org.connectbot.bean.PubkeyBean)-->org.connectbot.bean.PubkeyBean: void setId(long)
org.connectbot.HostListActivity$5: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.HostListActivity: void access$100(org.connectbot.HostListActivity)
org.connectbot.transport.TransportFactory: org.connectbot.transport.AbsTransport getTransport(java.lang.String)-->org.connectbot.transport.SSH: java.lang.String getProtocolName()
org.connectbot.transport.TransportFactory: org.connectbot.transport.AbsTransport getTransport(java.lang.String)-->org.connectbot.transport.SSH: void <init>()
org.connectbot.transport.TransportFactory: org.connectbot.transport.AbsTransport getTransport(java.lang.String)-->org.connectbot.transport.Telnet: void <clinit>()
org.connectbot.transport.TransportFactory: org.connectbot.transport.AbsTransport getTransport(java.lang.String)-->org.connectbot.transport.Local: java.lang.String getProtocolName()
org.connectbot.transport.TransportFactory: org.connectbot.transport.AbsTransport getTransport(java.lang.String)-->org.connectbot.transport.SSH: void <clinit>()
org.connectbot.transport.TransportFactory: org.connectbot.transport.AbsTransport getTransport(java.lang.String)-->org.connectbot.transport.Local: void <init>()
org.connectbot.transport.TransportFactory: org.connectbot.transport.AbsTransport getTransport(java.lang.String)-->org.connectbot.transport.Telnet: void <init>()
org.connectbot.transport.TransportFactory: org.connectbot.transport.AbsTransport getTransport(java.lang.String)-->org.connectbot.transport.Telnet: java.lang.String getProtocolName()
org.connectbot.transport.TransportFactory: void <clinit>()-->org.connectbot.transport.SSH: java.lang.String getProtocolName()
org.connectbot.transport.TransportFactory: void <clinit>()-->org.connectbot.transport.Local: java.lang.String getProtocolName()
org.connectbot.transport.TransportFactory: void <clinit>()-->org.connectbot.transport.Telnet: void <clinit>()
org.connectbot.transport.TransportFactory: void <clinit>()-->org.connectbot.transport.SSH: void <clinit>()
org.connectbot.transport.TransportFactory: void <clinit>()-->org.connectbot.transport.TransportFactory: void <clinit>()
org.connectbot.transport.TransportFactory: void <clinit>()-->org.connectbot.transport.Telnet: java.lang.String getProtocolName()
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setPort(int)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setLastConnect(long)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setWantSession(boolean)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setProtocol(java.lang.String)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setHostname(java.lang.String)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setPostLogin(java.lang.String)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setUsername(java.lang.String)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setPubkeyId(long)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setStayConnected(boolean)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void <init>()
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setColor(java.lang.String)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setCompression(boolean)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setEncoding(java.lang.String)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setDelKey(java.lang.String)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setNickname(java.lang.String)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setUseAuthAgent(java.lang.String)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setFontSize(int)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setQuickDisconnect(boolean)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setId(long)
org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)-->org.connectbot.bean.HostBean: void setUseKeys(boolean)
org.connectbot.ConsoleActivity: void hideEmulatedKeys()-->org.connectbot.ConsoleActivity: void hideActionBarIfRequested()
org.connectbot.PubkeyListActivity: void onActivityResult(int,int,android.content.Intent)-->org.connectbot.PubkeyListActivity: void readKeyFromFile(android.net.Uri)
org.connectbot.HostListActivity: void onResume()-->org.connectbot.HostListActivity: void disconnectAll()
org.connectbot.util.PubkeyDatabase: void <clinit>()-->org.connectbot.util.PubkeyDatabase: void <clinit>()
org.connectbot.util.PubkeyDatabase: void <clinit>()-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.util.PubkeyDatabase: void <clinit>()-->org.connectbot.util.RobustSQLiteOpenHelper: void addTableName(java.lang.String)
org.connectbot.PubkeyListActivity: boolean importExistingKey()-->org.connectbot.PubkeyListActivity: boolean importExistingKeyKitKat()
org.connectbot.PubkeyListActivity: boolean importExistingKey()-->org.connectbot.PubkeyListActivity: boolean importExistingKeyOpenIntents(android.net.Uri,java.lang.String)
org.connectbot.PubkeyListActivity: boolean importExistingKey()-->org.connectbot.PubkeyListActivity: boolean importExistingKeyAndExplorer(android.net.Uri,java.lang.String)
org.connectbot.PubkeyListActivity: boolean importExistingKey()-->org.connectbot.PubkeyListActivity: boolean pickFileSimple()
org.connectbot.ConsoleActivity: void onEmulatedKeyClicked(android.view.View)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
org.connectbot.ConsoleActivity: void onEmulatedKeyClicked(android.view.View)-->org.connectbot.ConsoleActivity: void hideEmulatedKeys()
org.connectbot.ConsoleActivity: void onEmulatedKeyClicked(android.view.View)-->org.connectbot.ConsoleActivity: void hideActionBarIfRequested()
org.connectbot.ConsoleActivity: void onEmulatedKeyClicked(android.view.View)-->org.connectbot.ConsoleActivity: void autoHideEmulatedKeys()
org.connectbot.util.Ed25519Provider: void <clinit>()-->org.connectbot.util.Ed25519Provider: void <clinit>()
org.connectbot.ConsoleActivity$TerminalPagerAdapter: java.lang.CharSequence getPageTitle(int)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.service.TerminalBridge getBridgeAtPosition(int)
org.connectbot.service.TerminalManager: void keepServiceAlive()-->org.connectbot.service.TerminalManager: void stopIdleTimer()
org.connectbot.util.HostDatabase: void setColorForScheme(int,int,int)-->org.connectbot.util.Colors: void <clinit>()
org.connectbot.service.TerminalManager: android.os.IBinder onBind(android.content.Intent)-->org.connectbot.service.TerminalManager: void keepServiceAlive()
org.connectbot.service.TerminalManager: android.os.IBinder onBind(android.content.Intent)-->org.connectbot.service.TerminalManager: void setResizeAllowed(boolean)
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.bean.HostBean: void setPort(int)
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.HostEditorFragment: void setUriPartsContainerExpanded(boolean)
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.transport.SSH: java.lang.String getProtocolName()
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.HostEditorFragment: void handleHostChange()
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.transport.Telnet: int getDefaultPort()
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.transport.Telnet: void <clinit>()
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.transport.SSH: void <clinit>()
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.transport.TransportFactory: org.connectbot.transport.AbsTransport getTransport(java.lang.String)
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.transport.SSH: int getDefaultPort()
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.transport.TransportFactory: void <clinit>()
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.transport.TransportFactory: java.lang.String getFormatHint(java.lang.String,android.content.Context)
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.bean.HostBean: void setProtocol(java.lang.String)
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.transport.Telnet: java.lang.String getProtocolName()
org.connectbot.HostEditorFragment: void setTransportType(java.lang.String,boolean)-->org.connectbot.transport.Local: int getDefaultPort()
org.connectbot.EditHostActivity$CharsetHolder: java.util.Map getCharsetData()-->org.connectbot.EditHostActivity$CharsetHolder: void initialize()
org.connectbot.EditHostActivity$CharsetHolder: java.util.Map getCharsetData()-->org.connectbot.EditHostActivity$CharsetHolder: void <clinit>()
org.connectbot.ColorsActivity$ColorsAdapter: void <init>(org.connectbot.ColorsActivity,boolean)-->org.connectbot.ColorsActivity$ColorsAdapter: void <init>(org.connectbot.ColorsActivity,boolean,int)
org.connectbot.transport.Telnet: android.net.Uri getUri(java.lang.String)-->org.connectbot.transport.Telnet: void <clinit>()
org.connectbot.bean.PortForwardBean: void <init>(long,long,java.lang.String,java.lang.String,int,java.lang.String,int)-->org.connectbot.bean.AbstractBean: void <init>()
org.connectbot.GeneratePubkeyActivity: void access$700(org.connectbot.GeneratePubkeyActivity)-->org.connectbot.GeneratePubkeyActivity: void startEntropyGather()
org.connectbot.service.TerminalManager$IdleTask: void run()-->org.connectbot.service.TerminalManager: void stopNow()
org.connectbot.service.TerminalManager: void <init>()-->org.connectbot.service.TerminalManager$TerminalBinder: void <init>(org.connectbot.service.TerminalManager)
org.connectbot.HostEditorFragment: void onSaveInstanceState(android.os.Bundle)-->org.connectbot.bean.HostBean: long getId()
org.connectbot.HostEditorFragment: void onSaveInstanceState(android.os.Bundle)-->org.connectbot.bean.HostBean: android.content.ContentValues getValues()
org.connectbot.util.Colors: void <clinit>()-->org.connectbot.util.Colors: void <clinit>()
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setPort(int)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setLastConnect(long)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setWantSession(boolean)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setProtocol(java.lang.String)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setHostname(java.lang.String)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setPostLogin(java.lang.String)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setUsername(java.lang.String)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setPubkeyId(long)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setStayConnected(boolean)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void <init>()
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setColor(java.lang.String)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setCompression(boolean)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setEncoding(java.lang.String)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setDelKey(java.lang.String)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setNickname(java.lang.String)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setUseAuthAgent(java.lang.String)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setFontSize(int)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setQuickDisconnect(boolean)
org.connectbot.bean.HostBean: org.connectbot.bean.HostBean fromContentValues(android.content.ContentValues)-->org.connectbot.bean.HostBean: void setUseKeys(boolean)
org.connectbot.ConsoleActivity$TerminalPagerAdapter: void notifyDataSetChanged()-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: int getCount()
org.connectbot.HostEditorActivity$CharsetHolder: void initialize()-->org.connectbot.HostEditorActivity$CharsetHolder: void <clinit>()
org.connectbot.GeneratePubkeyActivity$3: void onFocusChange(android.view.View,boolean)-->org.connectbot.GeneratePubkeyActivity: org.connectbot.GeneratePubkeyActivity$KeyType access$200(org.connectbot.GeneratePubkeyActivity)
org.connectbot.GeneratePubkeyActivity$3: void onFocusChange(android.view.View,boolean)-->org.connectbot.GeneratePubkeyActivity: void access$300(org.connectbot.GeneratePubkeyActivity,int)
org.connectbot.GeneratePubkeyActivity$3: void onFocusChange(android.view.View,boolean)-->org.connectbot.GeneratePubkeyActivity: android.widget.EditText access$500(org.connectbot.GeneratePubkeyActivity)
org.connectbot.GeneratePubkeyActivity$3: void onFocusChange(android.view.View,boolean)-->org.connectbot.GeneratePubkeyActivity: void <clinit>()
org.connectbot.GeneratePubkeyActivity: int[] access$000()-->org.connectbot.GeneratePubkeyActivity: void <clinit>()
org.connectbot.ConsoleActivity: org.connectbot.service.PromptHelper getCurrentPromptHelper()-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
org.connectbot.GeneratePubkeyActivity: void resetBitDefaults()-->org.connectbot.GeneratePubkeyActivity: void setBits(int)
org.connectbot.ConsoleActivity: void access$900(org.connectbot.ConsoleActivity)-->org.connectbot.ConsoleActivity: void hideEmulatedKeys()
org.connectbot.transport.Telnet: void <clinit>()-->org.connectbot.transport.Telnet: void <clinit>()
org.connectbot.HelpActivity$2: void onClick(android.view.View)-->org.connectbot.HelpActivity: android.view.LayoutInflater access$000(org.connectbot.HelpActivity)
org.connectbot.GeneratePubkeyActivity$7: void <clinit>()-->org.connectbot.GeneratePubkeyActivity$KeyType: void <clinit>()
org.connectbot.GeneratePubkeyActivity$7: void <clinit>()-->org.connectbot.GeneratePubkeyActivity$7: void <clinit>()
org.connectbot.GeneratePubkeyActivity$7: void <clinit>()-->org.connectbot.GeneratePubkeyActivity$KeyType: org.connectbot.GeneratePubkeyActivity$KeyType[] values()
org.connectbot.PubkeyListActivity: void onStart()-->org.connectbot.PubkeyListActivity: void updateList()
org.connectbot.ConsoleActivity$3: void onClick(android.view.View)-->org.connectbot.ConsoleActivity: void access$100(org.connectbot.ConsoleActivity,android.view.View)
org.connectbot.SettingsActivity: void <init>()-->org.connectbot.AppCompatPreferenceActivity: void <init>()
org.connectbot.service.ConnectivityReceiver: void onReceive(android.content.Context,android.content.Intent)-->org.connectbot.service.TerminalManager: void onConnectivityRestored()
org.connectbot.service.ConnectivityReceiver: void onReceive(android.content.Context,android.content.Intent)-->org.connectbot.service.TerminalManager: void onConnectivityLost()
org.connectbot.PubkeyListActivity: boolean pickFileSimple()-->org.connectbot.PubkeyListActivity$2: void <init>(org.connectbot.PubkeyListActivity,java.lang.String[],java.io.File)
org.connectbot.AppCompatPreferenceActivity: void onCreate(android.os.Bundle)-->org.connectbot.AppCompatPreferenceActivity: android.support.v7.app.ActionBar getSupportActionBar()
org.connectbot.AppCompatPreferenceActivity: void onCreate(android.os.Bundle)-->org.connectbot.AppCompatPreferenceActivity: android.support.v7.app.AppCompatDelegate getDelegate()
org.connectbot.service.ConnectionNotifier$PreEclair: void <clinit>()-->org.connectbot.service.ConnectionNotifier$PreEclair: void <clinit>()
org.connectbot.PubkeyListActivity: boolean onOptionsItemSelected(android.view.MenuItem)-->org.connectbot.PubkeyListActivity: boolean importExistingKey()
org.connectbot.ConsoleActivity: void showEmulatedKeys(boolean)-->org.connectbot.ConsoleActivity: void autoHideEmulatedKeys()
org.connectbot.PortForwardListActivity$2$2: void onClick(android.content.DialogInterface,int)-->org.connectbot.bean.PortForwardBean: void <init>(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.connectbot.PortForwardListActivity$2$2: void onClick(android.content.DialogInterface,int)-->org.connectbot.util.HostDatabase: boolean savePortForward(org.connectbot.bean.PortForwardBean)
org.connectbot.PortForwardListActivity$2$2: void onClick(android.content.DialogInterface,int)-->org.connectbot.PortForwardListActivity$Handler: void handleMessage(android.os.Message)
org.connectbot.PortForwardListActivity$2$2: void onClick(android.content.DialogInterface,int)-->org.connectbot.PortForwardListActivity: org.connectbot.bean.HostBean access$000(org.connectbot.PortForwardListActivity)
org.connectbot.HostListActivity: void updateList()-->org.connectbot.AppCompatListActivity: void adjustViewVisibility()
org.connectbot.HostListActivity: void updateList()-->org.connectbot.util.HostDatabase: void <clinit>()
org.connectbot.HostListActivity: void updateList()-->org.connectbot.util.HostDatabase: org.connectbot.util.HostDatabase get(android.content.Context)
org.connectbot.HostListActivity: void updateList()-->org.connectbot.util.HostDatabase: java.util.List getHosts(boolean)
org.connectbot.HostListActivity: void updateList()-->org.connectbot.HostListActivity$HostAdapter: void <init>(org.connectbot.HostListActivity,android.content.Context,java.util.List,org.connectbot.service.TerminalManager)
org.connectbot.HostListActivity: void updateList()-->org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()
org.connectbot.HostListActivity: void onActivityResult(int,int,android.content.Intent)-->org.connectbot.HostListActivity: void updateList()
org.connectbot.service.TerminalManager: void onConnectivityLost()-->org.connectbot.service.TerminalManager$2: void run()
org.connectbot.service.TerminalManager: void onConnectivityLost()-->org.connectbot.service.TerminalManager$2: void <init>(org.connectbot.service.TerminalManager)
org.connectbot.service.ConnectionNotifier$PreEclair: void hideRunningNotification(android.app.Service)-->org.connectbot.service.ConnectionNotifier: android.app.NotificationManager getNotificationManager(android.content.Context)
org.connectbot.ConsoleActivity$17: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.ConsoleActivity: void access$1400(org.connectbot.ConsoleActivity)
org.connectbot.transport.Local: void <init>()-->org.connectbot.transport.AbsTransport: void <init>()
org.connectbot.transport.Local: void <init>()-->org.connectbot.transport.Local$AndroidKiller: void <init>(org.connectbot.transport.Local$1)
org.connectbot.transport.TransportFactory: android.net.Uri getUri(java.lang.String,java.lang.String)-->org.connectbot.transport.Telnet: android.net.Uri getUri(java.lang.String)
org.connectbot.transport.TransportFactory: android.net.Uri getUri(java.lang.String,java.lang.String)-->org.connectbot.transport.SSH: java.lang.String getProtocolName()
org.connectbot.transport.TransportFactory: android.net.Uri getUri(java.lang.String,java.lang.String)-->org.connectbot.transport.Telnet: void <clinit>()
org.connectbot.transport.TransportFactory: android.net.Uri getUri(java.lang.String,java.lang.String)-->org.connectbot.transport.Local: java.lang.String getProtocolName()
org.connectbot.transport.TransportFactory: android.net.Uri getUri(java.lang.String,java.lang.String)-->org.connectbot.transport.Local: android.net.Uri getUri(java.lang.String)
org.connectbot.transport.TransportFactory: android.net.Uri getUri(java.lang.String,java.lang.String)-->org.connectbot.transport.SSH: void <clinit>()
org.connectbot.transport.TransportFactory: android.net.Uri getUri(java.lang.String,java.lang.String)-->org.connectbot.transport.SSH: android.net.Uri getUri(java.lang.String)
org.connectbot.transport.TransportFactory: android.net.Uri getUri(java.lang.String,java.lang.String)-->org.connectbot.transport.Telnet: java.lang.String getProtocolName()
org.connectbot.ConsoleActivity$18: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
org.connectbot.service.TerminalManager: boolean onUnbind(android.content.Intent)-->org.connectbot.service.TerminalManager: void stopWithDelay()
org.connectbot.service.TerminalManager: boolean onUnbind(android.content.Intent)-->org.connectbot.service.TerminalManager: void setResizeAllowed(boolean)
org.connectbot.ConsoleActivity: boolean onPrepareOptionsMenu(android.view.Menu)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
org.connectbot.service.TerminalManager$IdleTask: void <init>(org.connectbot.service.TerminalManager,org.connectbot.service.TerminalManager$1)-->org.connectbot.service.TerminalManager$IdleTask: void <init>(org.connectbot.service.TerminalManager)
org.connectbot.ConsoleActivity$13: void onClick(android.view.View)-->org.connectbot.ConsoleActivity: void access$1100(org.connectbot.ConsoleActivity,boolean)
org.connectbot.HostEditorFragment: void handleHostChange()-->org.connectbot.bean.HostBean: java.lang.String getProtocol()
org.connectbot.HostEditorFragment: void handleHostChange()-->org.connectbot.transport.TransportFactory: android.net.Uri getUri(java.lang.String,java.lang.String)
org.connectbot.HostEditorFragment: void handleHostChange()-->org.connectbot.transport.TransportFactory: void <clinit>()
org.connectbot.HostEditorActivity: void initCharsetPref(android.preference.ListPreference)-->org.connectbot.HostEditorActivity$CharsetHolder: java.lang.CharSequence[] getCharsetNames()
org.connectbot.HostEditorActivity: void initCharsetPref(android.preference.ListPreference)-->org.connectbot.HostEditorActivity$CharsetHolder: void <clinit>()
org.connectbot.HostEditorActivity: void initCharsetPref(android.preference.ListPreference)-->org.connectbot.HostEditorActivity$CharsetHolder: java.lang.CharSequence[] getCharsetIds()
org.connectbot.transport.Telnet: void <init>()-->org.connectbot.transport.AbsTransport: void <init>()
org.connectbot.transport.Telnet: void <init>()-->org.connectbot.transport.Telnet$1: void <init>(org.connectbot.transport.Telnet)
org.connectbot.HostListActivity$4: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.HostListActivity: void updateList()
org.connectbot.ConsoleActivity$19: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
org.connectbot.ConsoleActivity$19: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.ConsoleActivity$URLItemListener: void <init>(org.connectbot.ConsoleActivity,android.content.Context)
org.connectbot.service.ConnectionNotifier$PreEclair$Holder: org.connectbot.service.ConnectionNotifier$PreEclair access$000()-->org.connectbot.service.ConnectionNotifier$PreEclair$Holder: void <clinit>()
org.connectbot.bean.PortForwardBean: void <init>(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)-->org.connectbot.bean.PortForwardBean: void setDest(java.lang.String)
org.connectbot.bean.PortForwardBean: void <init>(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)-->org.connectbot.bean.AbstractBean: void <init>()
org.connectbot.ConsoleActivity$KeyRepeater: void onClick(android.view.View)-->org.connectbot.ConsoleActivity: void access$100(org.connectbot.ConsoleActivity,android.view.View)
org.connectbot.AppCompatPreferenceActivity: android.support.v7.app.ActionBar getSupportActionBar()-->org.connectbot.AppCompatPreferenceActivity: android.support.v7.app.AppCompatDelegate getDelegate()
org.connectbot.PubkeyListActivity$PubkeyAdapter: void <init>(org.connectbot.PubkeyListActivity,android.content.Context,java.util.List)-->org.connectbot.AppCompatListActivity$ItemAdapter: void <init>(android.content.Context)
org.connectbot.util.PubkeyUtils: void <clinit>()-->org.connectbot.util.PubkeyUtils: void <clinit>()
org.connectbot.util.PubkeyUtils: void <clinit>()-->org.connectbot.util.Ed25519Provider: void insertIfNeeded()
org.connectbot.util.PubkeyUtils: void <clinit>()-->org.connectbot.util.Ed25519Provider: void <clinit>()
org.connectbot.ConsoleActivity$20: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.ConsoleActivity$20$1: void <init>(org.connectbot.ConsoleActivity$20,android.view.View,org.connectbot.TerminalView)
org.connectbot.ConsoleActivity$20: boolean onMenuItemClick(android.view.MenuItem)-->org.connectbot.ConsoleActivity$TerminalPagerAdapter: org.connectbot.TerminalView getCurrentTerminalView()
